{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "customerName": {
      "type": "string",
      "metadata": {
        "description": "Customername for the installation"
      }      
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Default Admin username"
      },
      "defaultValue":"rpsadmin"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Default Admin password"
      },
      "defaultValue":"Ibermatica2020."
    },
    "diskSizeGB": {
      "type": "int",
       "allowedValues": [
         128
       ],
       "defaultValue":128       
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_B2ms",
      "metadata": {
        "description": "Virtual machine size (has to be at least the size of Standard_A3 to support 2 NICs)"
      },
      "allowedValues": [
        "Standard_D1_v2",
        "Standard_D2S_v3",
        "Standard_B2ms"
      ]
    },
    "applicationGatewaySize": {
      "type": "string",
      "allowedValues": [
        "Standard_Small",
        "Standard_Medium",
        "Standard_Large",
        "WAF_Medium"
      ],
      "defaultValue": "Standard_Small",
      "metadata": {
        "description": "application gateway size"
      }
    },
    "applicationGatewayTier":{
      "type": "string",
      "allowedValues": [
        "Standard",
        "WAF"      
      ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "application gateway tier"
      }
    }
  },
  "variables": {
      "rgName":"[resourceGroup().name]",  
      /*Templates*/
      "diagsStorageTemplate":"https://raw.githubusercontent.com/desarrollorps/armtemplates/main/Templates/diagStorageAccount.json",
      "rpsvmTemplate":"https://raw.githubusercontent.com/desarrollorps/armtemplates/main/Templates/vm.json",
      "nsgTemplate":"https://raw.githubusercontent.com/desarrollorps/armtemplates/main/Templates/nsg.json",
      "networkTemplate":"https://raw.githubusercontent.com/desarrollorps/armtemplates/main/Templates/virtualNetwork.json",
      "nicTemplate":"https://raw.githubusercontent.com/desarrollorps/armtemplates/main/Templates/nic.json",
      "sqldatabaseTemplate":"https://raw.githubusercontent.com/desarrollorps/armtemplates/main/Templates/sqldb.json",
      "vpnTemplate":"https://raw.githubusercontent.com/desarrollorps/armtemplates/main/Templates/vpn.json",
      "appGatewayTemplate":"https://raw.githubusercontent.com/desarrollorps/armtemplates/main/Templates/appgateway.json",
      "insightsTemplate":"https://raw.githubusercontent.com/desarrollorps/armtemplates/main/Templates/vminsights.json",
      "automationTemplate":"https://raw.githubusercontent.com/desarrollorps/armtemplates/main/Templates/automation.json",
      /*Location*/
      "location":"[resourceGroup().location]",
      /*Virtual machine*/
      "virtualmachinename":"rpsvmweu",
     
      "diagStorageAccountName": "[concat('diags',uniqueString(resourceGroup().id))]",  
      /*NSG*/
      "vmSecurityGroupName": "[concat(variables('virtualMachineName'), '-nsg')]",
      /*Virtual network*/
      "virtualnetworkname":"[concat(parameters('customerName'),'-',variables('rgName'),'-vnet')]",
      /*Sql server name*/
      "sqlservername":"[toLower(concat(parameters('customerName'),'sql',resourceGroup().name))]",
      "workspaces_defaultworkspace":"[concat('DefaultWorkspace-',uniqueString(resourceGroup().id))]"
      
  },
  "resources": [
    /*Network Security Group NSG*/
    {
      "name": "NSG",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nsgTemplate')]"
        },
        "parameters": {          
          "location": {
            "value": "[variables('location')]"
          },
          "vmSecurityGroupName":{
              "value":"[variables('vmSecurityGroupName')]"
          }
        }
      }
    },
    /*Storage account for vm diagnostics*/
    {
      "name": "diagStorageAccount",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('diagsStorageTemplate')]"
        },
        "parameters": {
          "diagStorageAccountName": {
            "value": "[variables('diagStorageAccountName')]"
          },
          "location": {
            "value": "[variables('location')]"
          }
        }
      }
    },
    /*Network*/
    {
      "name": "virtualNetwork",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('networkTemplate')]"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('virtualnetworkname')]"
          },
          "location": {
            "value": "[variables('location')]"
          }
        }
      }
    },
    /*Nic*/
     {
      "name": "nic1",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nicTemplate')]"
        },
        "parameters": {
          "nicName": {
            "value": "[variables('virtualnetworkname')]"
          },
          "subnetid": {
            "value": "[reference('virtualNetwork').outputs.subnet2Id.value]"
          },
          "nsgid": {
            "value": "[reference('NSG').outputs.resourceID.value]"
          },
          "location": {
            "value": "[variables('location')]"
          }
        }
        
      },
      "dependsOn": [
       "[resourceId('Microsoft.Resources/deployments', 'virtualNetwork')]",
       "[resourceId('Microsoft.Resources/deployments', 'NSG')]"
      ]
    },
     /*Insights Workspace*/
     {
      "name": "InsightsWorkspace",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('insightsTemplate')]"
        },
        "parameters": {       
          "location": {
            "value": "[variables('location')]"
          },
          "workspaces_defaultworkspace":{
            "value": "[variables('workspaces_defaultworkspace')]"
          }
          
        }
        
      }
    },
    /*Automation*/
    {
      "name": "Automation",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('automationTemplate')]"
        },
        "parameters": {
          "customerName": {
            "value": "[parameters('customerName')]"
          },
          "automationAccountName": {
            "value": "rpsautomation"
          },
          "location": {
            "value": "[variables('location')]"
          }          
        }        
      },
      "dependsOn": [      
      ]
    },
    //action grups
      {
          "type": "Microsoft.Insights/actionGroups",
          "apiVersion": "2019-03-01",
          "name": "Acciones a Desarrollo",
          "location": "Global",
          
          "properties": {
            "groupShortName": "Desarrollo",
            "enabled": true,
            "emailReceivers": [
              {
                "name": "Email Asier",
                "emailAddress": "a.ayestaran@ibermatica.com",
                "useCommonAlertSchema": true

              },
              {
                "name": "Email Xabi",
                "emailAddress": "x.arrieta@ibermatica.com",
                "useCommonAlertSchema": true
              },
              {
                "name": "Email Jorge",
                "emailAddress": "j.tamara@ibermatica.com",
                "useCommonAlertSchema": true
              },
              {
                "name": "Email Aritz",
                "emailAddress": "a.argulo@ibermatica.com",
                "useCommonAlertSchema": true
              }
            ]
          }
        },
        {
          "type": "Microsoft.Insights/actionGroups",
          "apiVersion": "2019-03-01",
          "name": "AccionesPoolRPS",
          "location": "Global",
          
          "properties": {
            "groupShortName": "PoolRPS",
            "enabled": true,
            "emailReceivers": [
              {
                "name": "Email Asier",
                "emailAddress": "a.ayestaran@ibermatica.com",
                "useCommonAlertSchema": true

              },
              {
                "name": "Email Xabi",
                "emailAddress": "x.arrieta@ibermatica.com",
                "useCommonAlertSchema": true
              },
              {
                "name": "Email Jorge",
                "emailAddress": "j.tamara@ibermatica.com",
                "useCommonAlertSchema": true
              },
              {
                "name": "Email Aritz",
                "emailAddress": "a.argulo@ibermatica.com",
                "useCommonAlertSchema": true
              }
            ]/*,            
            "automationRunbookReceivers": [
            {
              "automationAccountId": "[reference('Automation').outputs.resourceID.value]",
              "runbookName": "Restart AppPools",             
              "isGlobalRunbook": false,
              "name": "string",              
              "useCommonAlertSchema": true,
              "webhookResourceId":"",
              "serviceUri":""
            }
            ]*/
          },
          "dependsOn":[
            "[resourceId('Microsoft.Resources/deployments', 'Automation')]"
          ]
        },
    /*VM*/
    {
      "name": "RPSVirtualMachine",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('rpsvmTemplate')]"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "virtualMachineSize": {
            "value": "[parameters('virtualMachineSize')]"
          },
           "diskSizeGB": {
            "value": "[parameters('diskSizeGB')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "nicId":{
            "value": "[reference('nic1').outputs.resourceID.value]"
          },
          "diagStorageAccountUri":{
            "value": "[reference('diagStorageAccount').outputs.BlobUri.value]"            
          },
          "diagStorageAccountName":{
            "value":"[variables('diagStorageAccountName')]"
          }
          
        }
        
      },
      "dependsOn": [
       "[resourceId('Microsoft.Resources/deployments', 'diagStorageAccount')]",
       "[resourceId('Microsoft.Resources/deployments', 'NSG')]",
       "[resourceId('Microsoft.Resources/deployments', 'InsightsWorkspace')]",
       "[concat('Microsoft.Insights/actionGroups/', 'Acciones a Desarrollo')]"
      ]
    },
    /*Database*/
    {
      "name": "SQLDatabase",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('sqldatabaseTemplate')]"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "sqlServerName": {
            "value": "[variables('sqlservername')]"
          },
           "subnetId": {
            "value": "[reference('virtualNetwork').outputs.subnet3Id.value]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "ipaddress":{
            "value": "10.0.2.4"
          }          
        }        
      },
      "dependsOn": [
       "[resourceId('Microsoft.Resources/deployments', 'virtualNetwork')]"      
      ]
    },   
    /*Alertas VM*/
    {
            "name": "CPU Max Over 95percent",
            "type": "Microsoft.Insights/metricAlerts",
            "location": "global",
            "apiVersion": "2018-03-01",
            "dependsOn": [
                   "[resourceId('Microsoft.Resources/deployments', 'RPSVirtualMachine')]",
                   "[resourceId('Microsoft.Insights/actionGroups', 'Acciones a Desarrollo')]"
              ],
            "tags": {},
            "properties": {
                "description": "Ha habido un pico de la CPU de mas del 95%",
                "severity": "3",
                "enabled": true,
                "scopes": ["[reference('RPSVirtualMachine').outputs.resourceID.value]"],
                "evaluationFrequency":"PT5M",
                "windowSize": "PT5M",
                "criteria": {
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
                    "allOf": [
                        {
                            "name" : "Cada vez que el valor máximo de percentage cpu es mayor que que 95%",
                            "metricName": "Percentage CPU",
                            "dimensions":[],
                            "operator": "GreaterThan",
                            "threshold" : "95",
                            "timeAggregation": "Maximum"
                        }
                    ]
                },
                "actions": [
                    {
                        "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', 'Acciones a Desarrollo')]"
                    }
                ]
            }
        },
        {
            "name": "Disk free space under 10 percent",
            "type": "Microsoft.Insights/scheduledQueryRules",
             "location": "global",
            "apiVersion": "2020-05-01-preview",
            "dependsOn": [
                  "[resourceId('Microsoft.Resources/deployments', 'RPSVirtualMachine')]",
                  "[resourceId('Microsoft.Insights/actionGroups', 'Acciones a Desarrollo')]"
              ],
            "tags": {},
            "properties": {
                "description": "Alguno de los discos de la maquina virtual tiene menos de un 10% de espacio libre",
                "severity": "3",
                "enabled": true,
                 "scopes": ["[reference('RPSVirtualMachine').outputs.resourceID.value]"],
                "evaluationFrequency":"PT15M",
                "windowSize": "PT15M",
                "criteria": {
                    "allOf": [
                        {
                            "query": "InsightsMetrics | where Origin == 'vm.azm.ms' | where Namespace == 'LogicalDisk' and Name == 'FreeSpacePercentage' | extend Disk=tostring(todynamic(Tags)['vm.azm.ms/mountId']) | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk",
                            "metricMeasureColumn": "AggregatedValue",                            
                            "dimensions":[
                              {
                              "name":"Disk",
                              "operator": "Include",
                              "values": ["*"]
                            }
                            ],
                            "operator": "LessThan",
                            "threshold" : "10",
                            "timeAggregation": "Average",
                            "failingPeriods": {
                                "numberOfEvaluationPeriods": "4",
                                "minFailingPeriodsToAlert": "1"
                            }
                        }
                    ]
                },
                //"muteActionsDuration": "PT5M",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', 'Acciones a Desarrollo')]"
                    }
                ]
            }
        },
        {
            "name": "Memory AVG under 10 percent",
            "type": "Microsoft.Insights/scheduledQueryRules",
             "location": "global",
            "apiVersion": "2020-05-01-preview",
            "dependsOn": [
                  "[resourceId('Microsoft.Resources/deployments', 'RPSVirtualMachine')]",
                  "[resourceId('Microsoft.Insights/actionGroups', 'Acciones a Desarrollo')]"

              ],
            "tags": {},
            "properties": {
                "description": "La memoria disponible de la maquina virtual esta por debajo del 10%",
                "severity": "3",
                "enabled": true,
                 "scopes": ["[reference('RPSVirtualMachine').outputs.resourceID.value]"],
                "evaluationFrequency":"PT15M",
                "windowSize": "PT15M",
                "criteria": {
                    "allOf": [
                        {
                            "query": "InsightsMetrics | where Origin == 'vm.azm.ms' | where Namespace == 'Memory' and Name == 'AvailableMB' | extend TotalMemory = toreal(todynamic(Tags)['vm.azm.ms/memorySizeMB']) | extend AvailableMemoryPercentage = (toreal(Val) / TotalMemory) * 100.0 | summarize AggregatedValue = avg(AvailableMemoryPercentage) by bin(TimeGenerated, 15m), Computer, _ResourceId",
                            "metricMeasureColumn": "AggregatedValue",                            
                            "dimensions":[                             
                            ],
                            "operator": "LessThan",
                            "threshold" : "10",
                            "timeAggregation": "Average",
                            "failingPeriods": {
                                "numberOfEvaluationPeriods": "4",
                                "minFailingPeriodsToAlert": "1"
                            }
                        }
                    ]
                },
                //"muteActionsDuration": "PT5M",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', 'Acciones a Desarrollo')]"
                    }
                ]
            }
        },
         /*En RPSNextAppInsights hay que crear la prueba de disponibilidad*/
  
    /*Alertas BD*/
   
    
  
    /*VPN*/
     {
      "name": "vpnNetwork",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vpnTemplate')]"
        },
        "parameters": {
          "subnetId": {
            "value": "[reference('virtualNetwork').outputs.subnet4Id.value]"
          },
          "location": {
            "value": "[variables('location')]"
          }
        }
      },
       "dependsOn": [
       "[resourceId('Microsoft.Resources/deployments', 'virtualNetwork')]"      
      ]
    },
    /*App gateway*/
     {
      "name": "appGateway",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('appGatewayTemplate')]"
        },
        "parameters": {
          "subnetId": {
            "value": "[reference('virtualNetwork').outputs.subnet1Id.value]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "privateIPAddress": {
            "value": "[reference('nic1').outputs.networkInterface.value.ipConfigurations[0].properties.privateIPAddress]"
          },
          "applicationGatewaySize": {
            "value": "[parameters('applicationGatewaySize')]"
          },
          "applicationGatewayTier": {
            "value": "[parameters('applicationGatewayTier')]"
          }
        }
      },
       "dependsOn": [
       "[resourceId('Microsoft.Resources/deployments', 'virtualNetwork')]",
       "[resourceId('Microsoft.Resources/deployments', 'nic1')]" 
      ]
    }
    /*Backups de VM*/
    /*Alertas VM*/
    /*Alertas BD*/
   
    /*Automation*/
  ],
  "outputs": {}
}
/*Tras subir la plantilla:*/
/*Hay que poner en la ip publica del appgateway el dominio que tendrá*/
/*TEST:Comprobar que hay acceso a la maquina virtual desde fuera con el dominio que hemos puesto*/
/*Generar certificados para la VPN*/
/*  Powershells>CreateCertificate.ps1 cambiando el parametro $customer*/
/*  Ir al administrador de certificados de usuario, Personal y buscar CustomerIbermaticaP2SRootCert y CustomerIbermaticaP2SChildCert  */
/*    Exportar el RootCert con clave privada, contraseña Ibermatica, en dir github azureclients\customer\certificados\VPNRoot.pfx*/
/*    Exportar el RootCert sin clave privada, X.509 base 64, en dir github azureclients\customer\certificados\VPNRoot.cer*/
/*    Exportar el ChildCert con clave privada, contraseña Ibermatica, en dir github azureclients\customer\certificados\VPNClient.pfx (esto se pasa a los usuarios)*/
/*  En portal.azure.com ir a vpn-gatewaym configuracion de punto a sitio*/
/*    Metemos un certificado nuevo*/
/*    Copiamos el contenido del fichero VPNRoot.cer editado con el bloc de notas*/
/*    Quitar el certificado P2SRootCert*/
/*TEST:En el portal de azure, vpn-gateway, configuracion de punto a sitio, descargar cliente vpn*/
/*  Hay que ver que se nos instala la VPN con el nombre correcto y que podemos conectarnos a la maquina 10.0.1.4*/
/*  rpsadmin Ibermatica2020.*/
/*  Copiamos le zip que hemos descargado donde los certificados y lo desbloqueamos. Ya que a un usuario/consultor hay */
/*  que pasarle el zip y VPNClient.pfx*/
/*Deben restaurarse las BDs, RPS, Session y workflows si fuera necesario*/
/*  Nos restauramos en nuestro equipo la BD a subir a azure*/
/*  Click derecho en la BD->Tasks->Deploy database to azure sql y seguimos el asistente*/
/*  Vamos al servidor de sql de azure y copiamos el nombre del servidor*/
/*  TEST: Reviar que la BD esta restaurada en el nivel que se contrato Ej: Standard-S1*/
/*Hay que dar de alta al usuario pricipal de la suscripción como admin de sqlserver*/
/*Hay que poner en el centro de backup una directiva de backup y una instancia de backup para las vm y bases de datos*/
/*  Vamos al servidor de BD - Copias de seguridad y seleccionamos directivas de Backup*/
/*  BDS:
/*    En la BD de RPS PITR 7Dias, LTR 8 Semanas, en el resto solo PITR 7 días*/
/*  VMS:*/
/*    Vamos a la VM y seleccionamos Backup: Creamos un vault para el backup en el grupo de recursos rps*/
/*    Editamos la directiva de copia de seguridad a DailyPolicy a las 10pm en UTC+1, conservando las instantaneas 2 dias. Retencion diaria 30 dias, retencion mensual, basado en dia para 2 meses el dia 1 del mes. */
/*Hay que crear los grupos de acciones necesarios*/
/*  Ir al grupo de acciones AccionesPoolRPS, nombre para mostrar PoolRPS*/
/*    Deberian estar configurados los emails de Xabi, Asier, Jorge y Aritz*/
/*    Acciones:*/
/*      Seleccionamos un runbook de automation de USUARIO*/
/*      Seleccionamos Restart App Pools*/
/*Hay que montar los siguientes procesos de automatiomn*/
/*  En rpsautomation bajar a Cuentas de Ejecucion y dar a Crear cuenta de ejecucion de azure. Crear.*/
/*  Ejecutar el script Update Automation Az Modules, pasando los parametros del grupo de recursos y el nombre de la cuenta de automation*/
/*  Az.Accounts*/
/*  Az.Sql*/
/*  Az.KeyVault*/
/*  Az.Compute*/
/*  Az.Monitor*/
/*  Azure*/
/*  Hay que crear el runbook bacpacgeneration con el codigo de bacpacgeneration.ps1*/
/*  En la cuenta de automation crear en variables una variable Customer -> Value: nombre cliente en minisculas.*/
/*  Hay que programar la generacion del bacpac*/
/*    Generacion bacpac - bacpacgeneration 1 vez al dia 21:00 */
/*TEST:Probar los run book de automation
StopVM, 
StartVM,
RestarAppPools
bacpacgeneration
/*Hay que rellenar en la hoja excel servidores_Nube_y_FTP en la pestaña azureClients*/
/*todos los datos del nuevo cliente*/
/*SE DEJA LA MAQUINA PARADA Y SE PASA EL CLIENTE VPN y el Certificado a Jorge para instalar RPS*/
/*Alerta de BD*/
/*  Hay que crear una nueva alerta, alertas -> nueva alerta*/
/*  Nombre:DTU Usage greater than 90 perfect*/
/*  Descripcion:Customer - Hay en la BD un pico de más del 90% de uso de DTUs*/
/*  Grupo de acciones:Azure Desarrollo*/
/*  Condicion-> Selecionamos la BD de RPS como recurso*/
/*              Estatico*/
/*              Mayor que - Promedio - 90*/
/*              Granularidad 5 min, Frecuencia 1 min*/

/*Una vez jorge a hecho la instalación*/
/*Hay que montar las siguientes alertas*/
/*  En RPSNextAppInsights hay que crear la prueba de disponibilidad*/
/*    Creamos un elemento Application Insights con el nombre RPSNextAppInsights*/
/*    Una vez creado vamos al punto disponibilidad y agregamos una prueba con el nombre RPS Health*/
/*      SKU-Ping URL*/
/*      URL:La url de rps hasta status (sin .html)*/
/*      Habilitar reintentos:Si*/
/*      Frecuencia de prueba: 5 minutos*/
/*      Unicaciones de prueba: las que vienen por defecto*/
/*      Criterio de exito:120segundos respuesta http:200 y marcar coincidencia de contenido*/
/*        "IsRunning":true*/
/*      TEST:Una vez creado deberia verse en verde*/
/*    Alertas->Administrar reglas de alerta->rps healt-rpsnextappinsights*/
/*      Hay que añadir el grupo de acciones AccionesPoolRPS*/
/*Si el cliente no opera 24x7 hay que programar la ejecucion de los scripts de automation*/
/*  InicioSinActualizacionRPS - Start VM 15min antes de la hora que quieren trabajar*/
/*  InicioConActualizacionRPS - Start VM 15min antes de la hora del actualizador*/
/*  ParadaRPS - Stop VM A la hora que quiene terminar de trabajar*/
/*  InicioAlertasRPS - A la hora que comienzan a trabajar*/
/*  ParadaAlertasRPS - Disable Rules 2min antes de la hora que terminan de trabajar*/
/*TEST: Comprobar el mismo dia a partir de las 18 si la maquina se ha parado*/
/*TEST: Comprobar si a la hora que quieren la maquina esta arrancada*/
/*TEST: Ver si nos llegan alertas de disponibilidad y se solucionan solas.*/